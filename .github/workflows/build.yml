name: Build & SonarCloud

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  DOTNET_VERSION: '9.0.x'
  JAVA_VERSION: '17'

jobs:
  build:
    name: Build, Test & Analyze
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install tools
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-sonarscanner

      - name: Add dotnet tools to PATH
        run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: SonarScanner Begin
        shell: pwsh
        run: |
          dotnet-sonarscanner begin `
            /k:"Skiper29_SmartAgroPlan" `
            /o:"skiper29" `
            /d:sonar.token="${{ env.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: Build
        run: dotnet build SmartAgroPlan.sln --configuration Release

      - name: Run Tests with Coverage
        run: |
          dotnet-coverage collect --output-format "opencover" --output "coverage.opencover.xml" -- dotnet test SmartAgroPlan.XUnitTest/SmartAgroPlan.XUnitTest.csproj --configuration Release --logger "trx;LogFileName=test_results.trx"


      - name: SonarScanner End
        if: always()
        shell: pwsh
        run: dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"

      - name: Upload Coverage & Test Results
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            coverage.opencover.xml
            SmartAgroPlan.XUnitTest/TestResults/test_results.trx


  test-report:
    name: Publish Test Report
    runs-on: windows-latest
    needs: build
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # щоб був доступний git history

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          name: reports

      - name: Publish Test Results
        uses: dorny/test-reporter@v2
        with:
          name: Unit Tests
          path: SmartAgroPlan.XUnitTest/TestResults/test_results.trx
          reporter: dotnet-trx
          list-suites: failed
          list-tests: failed
          fail-on-error: true


